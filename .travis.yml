language: node_js
node_js:
  - "10"

stages:
  - test
  - build

jobs:
  include:

    - stage: test
      name: "Lint"
      if: type = push
      script:
        - npm run lint

    - stage: build
      name: "Build Linux App"
      env:
        - DOWNLOAD_ECHO_NODE_URL= "https://d14s13k07yt1gw.cloudfront.net/echo-linux.0.14.1.tar"
        - CRYPTO_API_KEY=$CRYPTO_API_KEY
      if: type = push
      # if: tag IS present
      script:
        - rm -rf node_modules
        - npm i
        - npm run package-deb-with-download-build
        - ls build/binaries/
      deploy:
        provider: releases
        api_key: $GITHUB_OAUTH_TOKEN
        file_glob: true
        file: echo-wallet*.zip
        skip_cleanup: true
        if: type = push
        # on:
        #   tags: true

    - stage: build
      name: "Build Win App"
      if: tag IS present
      env:
        - CRYPTO_API_KEY=$CRYPTO_API_KEY
      script:
        - rm -rf node_modules
        - "docker run -e CRYPTO_API_KEY=$CRYPTO_API_KEY --rm -v ${PWD}:/project -v ${PWD}/.cache/electron:/root/.cache/electron -v ${PWD}/.cache/electron-builder:/root/.cache/electron-builder electronuserland/builder:wine /bin/bash -c \"npm install && npm run package-win\""
      deploy:
        provider: releases
        api_key: $GITHUB_OAUTH_TOKEN
        file_glob: true
        file: build/binaries/Echo*.exe
        skip_cleanup: true
        on:
          tags: true

    - stage: build
      os: osx
      name: "Build macOS App"
      env:
        - DOWNLOAD_ECHO_NODE_URL= "https://d14s13k07yt1gw.cloudfront.net/echo-mac.0.14.1.tar"
        - CRYPTO_API_KEY=$CRYPTO_API_KEY
      if: tag IS present
      script:
        - rm -rf node_modules
        - npm i
        - npm run package-mac-with-download-build
      deploy:
        provider: releases
        api_key: $GITHUB_OAUTH_TOKEN
        file_glob: true
        file: build/binaries/Echo*.dmg
        skip_cleanup: true
        on:
          tags: true
